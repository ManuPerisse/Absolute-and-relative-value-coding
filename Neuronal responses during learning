clear all
M=readmatrix('MB109B-GCaMP6m_Learning_IAA0V_OCT0V_MCH0V');

%GCaMP trace is in the table from the second column to the end
%the first coclumn represent the different stimulations matched with
%different numbers (0.5=F0, .....)
odourtrace=M(:,1);  
data=size(M,2);
N=(data-1);

                % DEFINE ODOUR FRAMES FOR:
                
                % F0 for each odour
                % Odour alone before the first shock (16 frames)
                % The first shock (15 frames after the odour alone)
                % The first part of training (189 frames)
                % The second part of training (189 frames)
                % The whole 1 min of odour+12 shocks training
                % The odour OFF response (65 frames)
                % The training + OFF response
                
                

% Determining of each framewindow for the different stimulations
% determine F0 framewindow before each of three odour presentation 
framesFZero1=find(odourtrace(1:750)==0.5);
framesFZero2=find(odourtrace(750:1400)==0.5)+749;
framesFZero3=find(odourtrace(1400:1952)==0.5)+1399;

% determine framewindow where odor presentation is ALONE for each odour
%before the first shock
framesOdour1Alone1=find(odourtrace(1:750)==1);
framesOdour2Alone1=find(odourtrace(750:1400)==1)+749;
framesOdour3Alone1=find(odourtrace(1400:1952)==1)+1399;
% determine framewindow where odor presentation with the First shock
framesOdour1Shock1=find(odourtrace(1:750)==1.5);
framesOdour2Shock1=find(odourtrace(750:1400)==1.5)+749;
framesOdour3Shock1=find(odourtrace(1400:1952)==1.5)+1399;

% determine framewindow where odor presentation is ALONE for each odour
%before the second shock
framesOdour1Alone2=find(odourtrace(1:750)==2);
framesOdour2Alone2=find(odourtrace(750:1400)==2)+749;
framesOdour3Alone2=find(odourtrace(1400:1952)==2)+1399;
 % determine framewindow for odor presentation with the 2nd shock 
framesOdour1Shock2=find(odourtrace(1:750)==2.5);
framesOdour2Shock2=find(odourtrace(750:1400)==2.5)+749;
framesOdour3Shock2=find(odourtrace(1400:1952)==2.5)+1399;
 
% determine framewindow where odor presentation is ALONE for each odour
%before the third shock
framesOdour1Alone3=find(odourtrace(1:750)==3);
framesOdour2Alone3=find(odourtrace(750:1400)==3)+749;
framesOdour3Alone3=find(odourtrace(1400:1952)==3)+1399;
% determine framwindow for odor presentation with the 3rd shock
framesOdour1Shock3=find(odourtrace(1:750)==3.5);
framesOdour2Shock3=find(odourtrace(750:1400)==3.5)+749;
framesOdour3Shock3=find(odourtrace(1400:1952)==3.5)+1399;

% determine framewindow where odor presentation is ALONE for each odour
%before the fourth shock
framesOdour1Alone4=find(odourtrace(1:750)==4);
framesOdour2Alone4=find(odourtrace(750:1400)==4)+749;
framesOdour3Alone4=find(odourtrace(1400:1952)==4)+1399;
% determine framewindow where odor presentation with the 4th shock
framesOdour1Shock4=find(odourtrace(1:750)==4.5);
framesOdour2Shock4=find(odourtrace(750:1400)==4.5)+749;
framesOdour3Shock4=find(odourtrace(1400:1952)==4.5)+1399;
 
% determine framewindow where odor presentation is ALONE for each odour
%before the fifth shock
framesOdour1Alone5=find(odourtrace(1:750)==5);
framesOdour2Alone5=find(odourtrace(750:1400)==5)+749;
framesOdour3Alone5=find(odourtrace(1400:1952)==5)+1399;
% determine framewindow for odor presentation with the 5th shock 
framesOdour1Shock5=find(odourtrace(1:750)==5.5);
framesOdour2Shock5=find(odourtrace(750:1400)==5.5)+749;
framesOdour3Shock5=find(odourtrace(1400:1952)==5.5)+1399;
 
% determine framewindow where odor presentation is ALONE for each odour
% before the sixth shock
framesOdour1Alone6=find(odourtrace(1:750)==6);
framesOdour2Alone6=find(odourtrace(750:1400)==6)+749;
framesOdour3Alone6=find(odourtrace(1400:1952)==6)+1399;
% determine framwindow for odor presentation with the 6th shock
framesOdour1Shock6=find(odourtrace(1:750)==6.5);
framesOdour2Shock6=find(odourtrace(750:1400)==6.5)+749;
framesOdour3Shock6=find(odourtrace(1400:1952)==6.5)+1399;

% determine framewindow where odor presentation is ALONE for each odour
% before the seventh shock
framesOdour1Alone7=find(odourtrace(1:750)==7);
framesOdour2Alone7=find(odourtrace(750:1400)==7)+749;
framesOdour3Alone7=find(odourtrace(1400:1952)==7)+1399;
% determine framewindow where odor presentation with the 7th shock
framesOdour1Shock7=find(odourtrace(1:750)==7.5);
framesOdour2Shock7=find(odourtrace(750:1400)==7.5)+749;
framesOdour3Shock7=find(odourtrace(1400:1952)==7.5)+1399;
 
% determine framewindow where odor presentation is ALONE for each odour
% before the eighth shock
framesOdour1Alone8=find(odourtrace(1:750)==8);
framesOdour2Alone8=find(odourtrace(750:1400)==8)+749;
framesOdour3Alone8=find(odourtrace(1400:1952)==8)+1399;
% determine framewindow for odor presentation with the 8th shock 
framesOdour1Shock8=find(odourtrace(1:750)==8.5);
framesOdour2Shock8=find(odourtrace(750:1400)==8.5)+749;
framesOdour3Shock8=find(odourtrace(1400:1952)==8.5)+1399;
 
% determine framewindow where odor presentation is ALONE for each odour
% before the 9th shock
framesOdour1Alone9=find(odourtrace(1:750)==9);
framesOdour2Alone9=find(odourtrace(750:1400)==9)+749;
framesOdour3Alone9=find(odourtrace(1400:1952)==9)+1399;
% determine framwindow for odor presentation with the 9th shock
framesOdour1Shock9=find(odourtrace(1:750)==9.5);
framesOdour2Shock9=find(odourtrace(750:1400)==9.5)+749;
framesOdour3Shock9=find(odourtrace(1400:1952)==9.5)+1399;

% determine framewindow where odor presentation is ALONE for each odour
% before the 10th shock
framesOdour1Alone10=find(odourtrace(1:750)==10);
framesOdour2Alone10=find(odourtrace(750:1400)==10)+749;
framesOdour3Alone10=find(odourtrace(1400:1952)==10)+1399;
% determine framewindow where odor presentation with the 10th shock
framesOdour1Shock10=find(odourtrace(1:750)==10.5);
framesOdour2Shock10=find(odourtrace(750:1400)==10.5)+749;
framesOdour3Shock10=find(odourtrace(1400:1952)==10.5)+1399;
 
% determine framewindow where odor presentation is ALONE for each odour
% before the 11th shock
framesOdour1Alone11=find(odourtrace(1:750)==11);
framesOdour2Alone11=find(odourtrace(750:1400)==11)+749;
framesOdour3Alone11=find(odourtrace(1400:1952)==11)+1399;
% determine framewindow for odor presentation with the 11th shock 
framesOdour1Shock11=find(odourtrace(1:750)==11.5);
framesOdour2Shock11=find(odourtrace(750:1400)==11.5)+749;
framesOdour3Shock11=find(odourtrace(1400:1952)==11.5)+1399;
 
% determine framewindow where odor presentation is ALONE for each odour
% before the 12th shock
framesOdour1Alone12=find(odourtrace(1:750)==12);
framesOdour2Alone12=find(odourtrace(750:1400)==12)+749;
framesOdour3Alone12=find(odourtrace(1400:1952)==12)+1399;

%%%% Note that the 12th shock overlaps with the odour OFF hence no
%%%% calculation for it as it is impossible to desentangle one from the
%%%% other

% determine framewindow for each odour (1 min) divided in four
% parts/quarters

framesOdour1Firstquarter = cat(1,framesOdour1Alone1,framesOdour1Shock1);
framesOdour1Firstquarter = cat(1,framesOdour1Firstquarter,framesOdour1Alone2);
framesOdour1Firstquarter = cat(1,framesOdour1Firstquarter,framesOdour1Shock2);
framesOdour1Firstquarter = cat(1,framesOdour1Firstquarter,framesOdour1Alone3);
framesOdour1Firstquarter = cat(1,framesOdour1Firstquarter,framesOdour1Shock3);
framesOdour1Secondquarter = cat(1,framesOdour1Alone4,framesOdour1Shock4);
framesOdour1Secondquarter = cat(1,framesOdour1Secondquarter,framesOdour1Alone5);
framesOdour1Secondquarter = cat(1,framesOdour1Secondquarter,framesOdour1Shock5);
framesOdour1Secondquarter = cat(1,framesOdour1Secondquarter,framesOdour1Alone6);
framesOdour1Secondquarter = cat(1,framesOdour1Secondquarter,framesOdour1Shock6);
framesOdour1Thirdquarter = cat(1,framesOdour1Alone7,framesOdour1Shock7);
framesOdour1Thirdquarter = cat(1,framesOdour1Thirdquarter,framesOdour1Alone8);
framesOdour1Thirdquarter = cat(1,framesOdour1Thirdquarter,framesOdour1Shock8);
framesOdour1Thirdquarter = cat(1,framesOdour1Thirdquarter,framesOdour1Alone9);
framesOdour1Thirdquarter = cat(1,framesOdour1Thirdquarter,framesOdour1Shock9);
framesOdour1Fourthquarter = cat(1,framesOdour1Alone10,framesOdour1Shock10);
framesOdour1Fourthquarter = cat(1,framesOdour1Fourthquarter,framesOdour1Alone11);
framesOdour1Fourthquarter = cat(1,framesOdour1Fourthquarter,framesOdour1Shock11);
framesOdour1Fourthquarter = cat(1,framesOdour1Fourthquarter,framesOdour1Alone12);

framesOdour2Firstquarter = cat(1,framesOdour2Alone1,framesOdour2Shock1);
framesOdour2Firstquarter = cat(1,framesOdour2Firstquarter,framesOdour2Alone2);
framesOdour2Firstquarter = cat(1,framesOdour2Firstquarter,framesOdour2Shock2);
framesOdour2Firstquarter = cat(1,framesOdour2Firstquarter,framesOdour2Alone3);
framesOdour2Firstquarter = cat(1,framesOdour2Firstquarter,framesOdour2Shock3);
framesOdour2Secondquarter = cat(1,framesOdour2Alone4,framesOdour2Shock4);
framesOdour2Secondquarter = cat(1,framesOdour2Secondquarter,framesOdour2Alone5);
framesOdour2Secondquarter = cat(1,framesOdour2Secondquarter,framesOdour2Shock5);
framesOdour2Secondquarter = cat(1,framesOdour2Secondquarter,framesOdour2Alone6);
framesOdour2Secondquarter = cat(1,framesOdour2Secondquarter,framesOdour2Shock6);
framesOdour2Thirdquarter = cat(1,framesOdour2Alone7,framesOdour2Shock7);
framesOdour2Thirdquarter = cat(1,framesOdour2Thirdquarter,framesOdour2Alone8);
framesOdour2Thirdquarter = cat(1,framesOdour2Thirdquarter,framesOdour2Shock8);
framesOdour2Thirdquarter = cat(1,framesOdour2Thirdquarter,framesOdour2Alone9);
framesOdour2Thirdquarter = cat(1,framesOdour2Thirdquarter,framesOdour2Shock9);
framesOdour2Fourthquarter = cat(1,framesOdour2Alone10,framesOdour2Shock10);
framesOdour2Fourthquarter = cat(1,framesOdour2Fourthquarter,framesOdour2Alone11);
framesOdour2Fourthquarter = cat(1,framesOdour2Fourthquarter,framesOdour2Shock11);
framesOdour2Fourthquarter = cat(1,framesOdour2Fourthquarter,framesOdour2Alone12);

framesOdour3Firstquarter = cat(1,framesOdour3Alone1,framesOdour3Shock1);
framesOdour3Firstquarter = cat(1,framesOdour3Firstquarter,framesOdour3Alone2);
framesOdour3Firstquarter = cat(1,framesOdour3Firstquarter,framesOdour3Shock2);
framesOdour3Firstquarter = cat(1,framesOdour3Firstquarter,framesOdour3Alone3);
framesOdour3Firstquarter = cat(1,framesOdour3Firstquarter,framesOdour3Shock3);
framesOdour3Secondquarter = cat(1,framesOdour3Alone4,framesOdour3Shock4);
framesOdour3Secondquarter = cat(1,framesOdour3Secondquarter,framesOdour3Alone5);
framesOdour3Secondquarter = cat(1,framesOdour3Secondquarter,framesOdour3Shock5);
framesOdour3Secondquarter = cat(1,framesOdour3Secondquarter,framesOdour3Alone6);
framesOdour3Secondquarter = cat(1,framesOdour3Secondquarter,framesOdour3Shock6);
framesOdour3Thirdquarter = cat(1,framesOdour3Alone7,framesOdour3Shock7);
framesOdour3Thirdquarter = cat(1,framesOdour3Thirdquarter,framesOdour3Alone8);
framesOdour3Thirdquarter = cat(1,framesOdour3Thirdquarter,framesOdour3Shock8);
framesOdour3Thirdquarter = cat(1,framesOdour3Thirdquarter,framesOdour3Alone9);
framesOdour3Thirdquarter = cat(1,framesOdour3Thirdquarter,framesOdour3Shock9);
framesOdour3Fourthquarter = cat(1,framesOdour3Alone10,framesOdour3Shock10);
framesOdour3Fourthquarter = cat(1,framesOdour3Fourthquarter,framesOdour3Alone11);
framesOdour3Fourthquarter = cat(1,framesOdour3Fourthquarter,framesOdour3Shock11);
framesOdour3Fourthquarter = cat(1,framesOdour3Fourthquarter,framesOdour3Alone12);

% determine framewindow for the first and second part of each odour presention (30 sec)
framesOdour1Firstpart = cat(1,framesOdour1Firstquarter,framesOdour1Secondquarter);
framesOdour1Secondpart = cat(1,framesOdour1Thirdquarter,framesOdour1Fourthquarter);
framesOdour2Firstpart = cat(1,framesOdour2Firstquarter,framesOdour2Secondquarter);
framesOdour2Secondpart = cat(1,framesOdour2Thirdquarter,framesOdour2Fourthquarter);
framesOdour3Firstpart = cat(1,framesOdour3Firstquarter,framesOdour3Secondquarter);
framesOdour3Secondpart = cat(1,framesOdour3Thirdquarter,framesOdour3Fourthquarter);

% determine framewindow for each odour presention (1min)
framesOdour1 = cat(1,framesOdour1Firstquarter,framesOdour1Secondquarter);
framesOdour1 = cat(1,framesOdour1,framesOdour1Thirdquarter);
framesOdour1 = cat(1,framesOdour1,framesOdour1Fourthquarter);
framesOdour2 = cat(1,framesOdour2Firstquarter,framesOdour2Secondquarter);
framesOdour2 = cat(1,framesOdour2,framesOdour2Thirdquarter);
framesOdour2 = cat(1,framesOdour2,framesOdour2Fourthquarter);
framesOdour3 = cat(1,framesOdour3Firstquarter,framesOdour3Secondquarter);
framesOdour3 = cat(1,framesOdour3,framesOdour3Thirdquarter);
framesOdour3 = cat(1,framesOdour3,framesOdour3Fourthquarter);

% determine framewindow for each trial (odour +shock)
framesTrial1Odour1 = cat(1,framesOdour1Alone1,framesOdour1Shock1);
framesTrial2Odour1 = cat(1,framesOdour1Alone2,framesOdour1Shock2);
framesTrial3Odour1 = cat(1,framesOdour1Alone3,framesOdour1Shock3);
framesTrial4Odour1 = cat(1,framesOdour1Alone4,framesOdour1Shock4);
framesTrial5Odour1 = cat(1,framesOdour1Alone5,framesOdour1Shock5);
framesTrial6Odour1 = cat(1,framesOdour1Alone6,framesOdour1Shock6);
framesTrial7Odour1 = cat(1,framesOdour1Alone7,framesOdour1Shock7);
framesTrial8Odour1 = cat(1,framesOdour1Alone8,framesOdour1Shock8);
framesTrial9Odour1 = cat(1,framesOdour1Alone9,framesOdour1Shock9);
framesTrial10Odour1 = cat(1,framesOdour1Alone10,framesOdour1Shock10);
framesTrial11Odour1 = cat(1,framesOdour1Alone11,framesOdour1Shock11);

framesTrial1Odour2 = cat(1,framesOdour2Alone1,framesOdour2Shock1);
framesTrial2Odour2 = cat(1,framesOdour2Alone2,framesOdour2Shock2);
framesTrial3Odour2 = cat(1,framesOdour2Alone3,framesOdour2Shock3);
framesTrial4Odour2 = cat(1,framesOdour2Alone4,framesOdour2Shock4);
framesTrial5Odour2 = cat(1,framesOdour2Alone5,framesOdour2Shock5);
framesTrial6Odour2 = cat(1,framesOdour2Alone6,framesOdour2Shock6);
framesTrial7Odour2 = cat(1,framesOdour2Alone7,framesOdour2Shock7);
framesTrial8Odour2 = cat(1,framesOdour2Alone8,framesOdour2Shock8);
framesTrial9Odour2 = cat(1,framesOdour2Alone9,framesOdour2Shock9);
framesTrial10Odour2 = cat(1,framesOdour2Alone10,framesOdour2Shock10);
framesTrial11Odour2 = cat(1,framesOdour2Alone11,framesOdour2Shock11);

framesTrial1Odour3 = cat(1,framesOdour3Alone1,framesOdour3Shock1);
framesTrial2Odour3 = cat(1,framesOdour3Alone2,framesOdour3Shock2);
framesTrial3Odour3 = cat(1,framesOdour3Alone3,framesOdour3Shock3);
framesTrial4Odour3 = cat(1,framesOdour3Alone4,framesOdour3Shock4);
framesTrial5Odour3 = cat(1,framesOdour3Alone5,framesOdour3Shock5);
framesTrial6Odour3 = cat(1,framesOdour3Alone6,framesOdour3Shock6);
framesTrial7Odour3 = cat(1,framesOdour3Alone7,framesOdour3Shock7);
framesTrial8Odour3 = cat(1,framesOdour3Alone8,framesOdour3Shock8);
framesTrial9Odour3 = cat(1,framesOdour3Alone9,framesOdour3Shock9);
framesTrial10Odour3 = cat(1,framesOdour3Alone10,framesOdour3Shock10);
framesTrial11Odour3 = cat(1,framesOdour3Alone11,framesOdour3Shock11);

framesTrial23Odour3 = cat(1,framesTrial2Odour3,framesTrial3Odour3);
framesshock1Trial23Odour3 = cat(1,framesOdour3Shock1,framesTrial23Odour3);

% determine framewindow OFF odor presentation for each odour
framesOdour1OFF=find(odourtrace(1:750)==13);
framesOdour2OFF=find(odourtrace(750:1400)==13)+749;
framesOdour3OFF=find(odourtrace(1400:1952)==13)+1399;

% determine framewindow for each odour + OFF response (1 min 10)
framesOdour1plusOFF = cat(1,framesOdour1,framesOdour1OFF);
framesOdour2plusOFF = cat(1,framesOdour2,framesOdour2OFF);
framesOdour3plusOFF = cat(1,framesOdour3,framesOdour3OFF);


                

        % CREATING MATRICES for the different odour Frames
           %WITH MEAN, PEAK and INTEGRAL CALCULATION           


        
        % calculate mean F0 for each odour presentation
                            
% creating a matrix for F0 values for each odour
FZero1 = M(framesFZero1,2:end);
FZero2 = M(framesFZero2,2:end);
FZero3 = M(framesFZero3,2:end);
 
% calcul of mean F0 for each odour
meanFZero1 = mean(FZero1);
meanFZero2 = mean(FZero2);
meanFZero3 = mean(FZero3);




                % Odour presentation ALONE1 (first 16 frames)
                           
% creating a matrix for the odour alone for each odour
Odour1Alone1 = M(framesOdour1Alone1,2:end);
Odour2Alone1 = M(framesOdour2Alone1,2:end);
Odour3Alone1 = M(framesOdour3Alone1,2:end);
% Normalizing frames to F0 for Odour 1, 2 and 3
Odour1Alone1normF0 = (Odour1Alone1 - meanFZero1)./meanFZero1;
Odour2Alone1normF0 = (Odour2Alone1 - meanFZero2)./meanFZero2;
Odour3Alone1normF0 = (Odour3Alone1 - meanFZero3)./meanFZero3;
% calculate mean for Odour 1, 2 and 3
meanstatOdour1Alone1 = mean(Odour1Alone1normF0);
meanstatOdour2Alone1 = mean(Odour2Alone1normF0);
meanstatOdour3Alone1 = mean(Odour3Alone1normF0); 
% mean peak DF/F0 for the whole Odour 1, 2 and 3
peakstatOdour1Alone1 = max(Odour1Alone1normF0);
peakstatOdour2Alone1 = max(Odour2Alone1normF0);
peakstatOdour3Alone1 = max(Odour3Alone1normF0);
% extract mean integral DF/F0 for the whole Odour 1, 2 and 3
intstatOdour1Alone1 = sum(Odour1Alone1normF0);
intstatOdour2Alone1 = sum(Odour2Alone1normF0);
intstatOdour3Alone1 = sum(Odour3Alone1normF0);

         % Odour presentation ALONE2 (first 16 frames)
                           
% creating a matrix for the odour alone for each odour
Odour1Alone2 = M(framesOdour1Alone2,2:end);
Odour2Alone2 = M(framesOdour2Alone2,2:end);
Odour3Alone2 = M(framesOdour3Alone2,2:end);
% Normalizing frames to F0 for Odour 1, 2 and 3
Odour1Alone2normF0 = (Odour1Alone2 - meanFZero1)./meanFZero1;
Odour2Alone2normF0 = (Odour2Alone2 - meanFZero2)./meanFZero2;
Odour3Alone2normF0 = (Odour3Alone2 - meanFZero3)./meanFZero3;
% calculate mean for Odour 1, 2 and 3
meanstatOdour1Alone2 = mean(Odour1Alone2normF0);
meanstatOdour2Alone2 = mean(Odour2Alone2normF0);
meanstatOdour3Alone2 = mean(Odour3Alone2normF0); 
% mean peak DF/F0 for the whole Odour 1, 2 and 3
peakstatOdour1Alone2 = max(Odour1Alone2normF0);
peakstatOdour2Alone2 = max(Odour2Alone2normF0);
peakstatOdour3Alone2 = max(Odour3Alone2normF0);
% extract mean integral DF/F0 for the whole Odour 1, 2 and 3
intstatOdour1Alone2 = sum(Odour1Alone2normF0);
intstatOdour2Alone2 = sum(Odour2Alone2normF0);
intstatOdour3Alone2 = sum(Odour3Alone2normF0);

        % Odour presentation ALONE3 (first 16 frames)
                           
% creating a matrix for the odour alone for each odour
Odour1Alone3 = M(framesOdour1Alone3,2:end);
Odour2Alone3 = M(framesOdour2Alone3,2:end);
Odour3Alone3 = M(framesOdour3Alone3,2:end);
% Normalizing frames to F0 for Odour 1, 2 and 3
Odour1Alone3normF0 = (Odour1Alone3 - meanFZero1)./meanFZero1;
Odour2Alone3normF0 = (Odour2Alone3 - meanFZero2)./meanFZero2;
Odour3Alone3normF0 = (Odour3Alone3 - meanFZero3)./meanFZero3;
% calculate mean for Odour 1, 2 and 3
meanstatOdour1Alone3 = mean(Odour1Alone3normF0);
meanstatOdour2Alone3 = mean(Odour2Alone3normF0);
meanstatOdour3Alone3 = mean(Odour3Alone3normF0); 
% mean peak DF/F0 for the whole Odour 1, 2 and 3
peakstatOdour1Alone3 = max(Odour1Alone3normF0);
peakstatOdour2Alone3 = max(Odour2Alone3normF0);
peakstatOdour3Alone3 = max(Odour3Alone3normF0);
% extract mean integral DF/F0 for the whole Odour 1, 2 and 3
intstatOdour1Alone3 = sum(Odour1Alone3normF0);
intstatOdour2Alone3 = sum(Odour2Alone3normF0);
intstatOdour3Alone3 = sum(Odour3Alone3normF0);

% Odour presentation ALONE4 (first 16 frames)
                           
% creating a matrix for the odour alone for each odour
Odour1Alone4 = M(framesOdour1Alone4,2:end);
Odour2Alone4 = M(framesOdour2Alone4,2:end);
Odour3Alone4 = M(framesOdour3Alone4,2:end);
% Normalizing frames to F0 for Odour 1, 2 and 3
Odour1Alone4normF0 = (Odour1Alone4 - meanFZero1)./meanFZero1;
Odour2Alone4normF0 = (Odour2Alone4 - meanFZero2)./meanFZero2;
Odour3Alone4normF0 = (Odour3Alone4 - meanFZero3)./meanFZero3;
% calculate mean for Odour 1, 2 and 3
meanstatOdour1Alone4 = mean(Odour1Alone4normF0);
meanstatOdour2Alone4 = mean(Odour2Alone4normF0);
meanstatOdour3Alone4 = mean(Odour3Alone4normF0); 
% mean peak DF/F0 for the whole Odour 1, 2 and 3
peakstatOdour1Alone4 = max(Odour1Alone4normF0);
peakstatOdour2Alone4 = max(Odour2Alone4normF0);
peakstatOdour3Alone4 = max(Odour3Alone4normF0);
% extract mean integral DF/F0 for the whole Odour 1, 2 and 3
intstatOdour1Alone4 = sum(Odour1Alone4normF0);
intstatOdour2Alone4 = sum(Odour2Alone4normF0);
intstatOdour3Alone4 = sum(Odour3Alone4normF0);

     % Odor presentation during First shock for each odour presentation
                           
% creating a matrix for the First shock presentation for each odour
Odour1Firstshock = M(framesOdour1Shock1,2:end);
Odour2Firstshock = M(framesOdour2Shock1,2:end);
Odour3Firstshock = M(framesOdour3Shock1,2:end);
% Normalizing frames to F0 for Odour 1, 2 and 3
Odour1FirstshocknormF0 = (Odour1Firstshock - meanFZero1)./meanFZero1;
Odour2FirstshocknormF0 = (Odour2Firstshock - meanFZero2)./meanFZero2;
Odour3FirstshocknormF0 = (Odour3Firstshock - meanFZero3)./meanFZero3;
% calculate mean for Odour 1, 2 and 3
meanstatOdour1Firstshock = mean(Odour1FirstshocknormF0);
meanstatOdour2Firstshock = mean(Odour2FirstshocknormF0);
meanstatOdour3Firstshock = mean(Odour3FirstshocknormF0);
% mean peak DF/F0 for the whole Odour 1, 2 and 3
peakstatOdour1Firstshock = max(Odour1FirstshocknormF0);
peakstatOdour2Firstshock = max(Odour2FirstshocknormF0);
peakstatOdour3Firstshock = max(Odour3FirstshocknormF0);
% extract mean integral DF/F0 for the whole Odour 1, 2 and 3
intstatOdour1Firstshock = sum(Odour1FirstshocknormF0);
intstatOdour2Firstshock = sum(Odour2FirstshocknormF0);
intstatOdour3Firstshock = sum(Odour3FirstshocknormF0);

 % Odor presentation during second shock for each odour presentation
                           
% creating a matrix for the second shock presentation for each odour
Odour1Secondshock = M(framesOdour1Shock2,2:end);
Odour2Secondshock = M(framesOdour2Shock2,2:end);
Odour3Secondshock = M(framesOdour3Shock2,2:end);
% Normalizing frames to F0 for Odour 1, 2 and 3
Odour1SecondshocknormF0 = (Odour1Secondshock - meanFZero1)./meanFZero1;
Odour2SecondshocknormF0 = (Odour2Secondshock - meanFZero2)./meanFZero2;
Odour3SecondshocknormF0 = (Odour3Secondshock - meanFZero3)./meanFZero3;
% calculate mean for Odour 1, 2 and 3
meanstatOdour1Secondshock = mean(Odour1SecondshocknormF0);
meanstatOdour2Secondshock = mean(Odour2SecondshocknormF0);
meanstatOdour3Secondshock = mean(Odour3SecondshocknormF0);
% mean peak DF/F0 for the whole Odour 1, 2 and 3
peakstatOdour1Secondshock = max(Odour1SecondshocknormF0);
peakstatOdour2Secondshock = max(Odour2SecondshocknormF0);
peakstatOdour3Secondshock = max(Odour3SecondshocknormF0);
% extract mean integral DF/F0 for the whole Odour 1, 2 and 3
intstatOdour1Secondshock = sum(Odour1SecondshocknormF0);
intstatOdour2Secondshock = sum(Odour2SecondshocknormF0);
intstatOdour3Secondshock = sum(Odour3SecondshocknormF0);


% Odor presentation during third shock for each odour presentation
                           
% creating a matrix for the Third shock presentation for each odour
Odour1Thirdshock = M(framesOdour1Shock3,2:end);
Odour2Thirdshock = M(framesOdour2Shock3,2:end);
Odour3Thirdshock = M(framesOdour3Shock3,2:end);
% Normalizing frames to F0 for Odour 1, 2 and 3
Odour1ThirdshocknormF0 = (Odour1Thirdshock - meanFZero1)./meanFZero1;
Odour2ThirdshocknormF0 = (Odour2Thirdshock - meanFZero2)./meanFZero2;
Odour3ThirdshocknormF0 = (Odour3Thirdshock - meanFZero3)./meanFZero3;
% calculate mean for Odour 1, 2 and 3
meanstatOdour1Thirdshock = mean(Odour1ThirdshocknormF0);
meanstatOdour2Thirdshock = mean(Odour2ThirdshocknormF0);
meanstatOdour3Thirdshock = mean(Odour3ThirdshocknormF0);
% mean peak DF/F0 for the whole Odour 1, 2 and 3
peakstatOdour1Thirdshock = max(Odour1ThirdshocknormF0);
peakstatOdour2Thirdshock = max(Odour2ThirdshocknormF0);
peakstatOdour3Thirdshock = max(Odour3ThirdshocknormF0);
% extract mean integral DF/F0 for the whole Odour 1, 2 and 3
intstatOdour1Thirdshock = sum(Odour1ThirdshocknormF0);
intstatOdour2Thirdshock = sum(Odour2ThirdshocknormF0);
intstatOdour3Thirdshock = sum(Odour3ThirdshocknormF0);

% Odor presentation during Fourth shock for each odour presentation
                           
% creating a matrix for the Fourth shock presentation for each odour
Odour1Fourthshock = M(framesOdour1Shock4,2:end);
Odour2Fourthshock = M(framesOdour2Shock4,2:end);
Odour3Fourthshock = M(framesOdour3Shock4,2:end);
% Normalizing frames to F0 for Odour 1, 2 and 3
Odour1FourthshocknormF0 = (Odour1Fourthshock - meanFZero1)./meanFZero1;
Odour2FourthshocknormF0 = (Odour2Fourthshock - meanFZero2)./meanFZero2;
Odour3FourthshocknormF0 = (Odour3Fourthshock - meanFZero3)./meanFZero3;
% calculate mean for Odour 1, 2 and 3
meanstatOdour1Fourthshock = mean(Odour1FourthshocknormF0);
meanstatOdour2Fourthshock = mean(Odour2FourthshocknormF0);
meanstatOdour3Fourthshock = mean(Odour3FourthshocknormF0);
% mean peak DF/F0 for the whole Odour 1, 2 and 3
peakstatOdour1Fourthshock = max(Odour1FourthshocknormF0);
peakstatOdour2Fourthshock = max(Odour2FourthshocknormF0);
peakstatOdour3Fourthshock = max(Odour3FourthshocknormF0);
% extract mean integral DF/F0 for the whole Odour 1, 2 and 3
intstatOdour1Fourthshock = sum(Odour1FourthshocknormF0);
intstatOdour2Fourthshock = sum(Odour2FourthshocknormF0);
intstatOdour3Fourthshock = sum(Odour3FourthshocknormF0);


                 % First part of training (189 frames)
                     %for each odour presentation
                           
% creating a matrix for the first part of training for each odour
Odour1Firstpart = M(framesOdour1Firstpart,2:end);
Odour2Firstpart = M(framesOdour2Firstpart,2:end);
Odour3Firstpart = M(framesOdour3Firstpart,2:end);
% Normalizing frames to F0 for Odour 1, 2 and 3
Odour1FirstpartnormF0 = (Odour1Firstpart - meanFZero1)./meanFZero1;
Odour2FirstpartnormF0 = (Odour2Firstpart - meanFZero2)./meanFZero2;
Odour3FirstpartnormF0 = (Odour3Firstpart - meanFZero3)./meanFZero3;
% calculate mean for Odour 1, 2 and 3
meanstatOdour1Firstpart = mean(Odour1FirstpartnormF0);
meanstatOdour2Firstpart = mean(Odour2FirstpartnormF0);
meanstatOdour3Firstpart = mean(Odour3FirstpartnormF0);
% mean peak DF/F0 for the whole Odour 1, 2 and 3
peakstatOdour1Firstpart = max(Odour1FirstpartnormF0);
peakstatOdour2Firstpart = max(Odour2FirstpartnormF0);
peakstatOdour3Firstpart = max(Odour3FirstpartnormF0);
% extract mean integral DF/F0 for the whole Odour 1, 2 and 3
intstatOdour1Firstpart = sum(Odour1FirstpartnormF0);
intstatOdour2Firstpart = sum(Odour2FirstpartnormF0);
intstatOdour3Firstpart = sum(Odour3FirstpartnormF0);

    
             % Second part of training (189 frames)
                  % for each odour presentation
                           
% creating a matrix for the second part of training for each odour
Odour1Secondpart = M(framesOdour1Secondpart,2:end);
Odour2Secondpart = M(framesOdour2Secondpart,2:end);
Odour3Secondpart = M(framesOdour3Secondpart,2:end);
% Normalizing frames to F0 for Odour 1, 2 and 3
Odour1SecondpartnormF0 = (Odour1Secondpart - meanFZero1)./meanFZero1;
Odour2SecondpartnormF0 = (Odour2Secondpart - meanFZero2)./meanFZero2;
Odour3SecondpartnormF0 = (Odour3Secondpart - meanFZero3)./meanFZero3;
% calculate mean for Odour 1, 2 and 3
meanstatOdour1Secondpart = mean(Odour1SecondpartnormF0);
meanstatOdour2Secondpart = mean(Odour2SecondpartnormF0);
meanstatOdour3Secondpart = mean(Odour3SecondpartnormF0);
% mean peak DF/F0 for the whole Odour 1, 2 and 3
peakstatOdour1Secondpart = max(Odour1SecondpartnormF0);
peakstatOdour2Secondpart = max(Odour2SecondpartnormF0);
peakstatOdour3Secondpart = max(Odour3SecondpartnormF0);
% extract mean integral DF/F0 for the whole Odour 1, 2 and 3
intstatOdour1Secondpart = sum(Odour1SecondpartnormF0);
intstatOdour2Secondpart = sum(Odour2SecondpartnormF0);
intstatOdour3Secondpart = sum(Odour3SecondpartnormF0);



%%%%%%% quarters part of training (94 or 95 frames)   %%%%%%%%
                  % for each odour presentation
                           
% creating a matrix for each quarters of the 1min training for each odour
% Odour 1
Odour1Firstquarter = M(framesOdour1Firstquarter,2:end);
Odour1Secondquarter = M(framesOdour1Secondquarter,2:end);
Odour1Thirdquarter = M(framesOdour1Thirdquarter,2:end);
Odour1Fourthquarter = M(framesOdour1Fourthquarter,2:end);
% Odour 2
Odour2Firstquarter = M(framesOdour2Firstquarter,2:end);
Odour2Secondquarter = M(framesOdour2Secondquarter,2:end);
Odour2Thirdquarter = M(framesOdour2Thirdquarter,2:end);
Odour2Fourthquarter = M(framesOdour2Fourthquarter,2:end);
% Odour 3
Odour3Firstquarter = M(framesOdour3Firstquarter,2:end);
Odour3Secondquarter = M(framesOdour3Secondquarter,2:end);
Odour3Thirdquarter = M(framesOdour3Thirdquarter,2:end);
Odour3Fourthquarter = M(framesOdour3Fourthquarter,2:end);

% Normalizing frames to F0 for each odour
% Odour 1
Odour1FirstquarternormF0 = (Odour1Firstquarter - meanFZero1)./meanFZero1;
Odour1SecondquarternormF0 = (Odour1Secondquarter - meanFZero1)./meanFZero1;
Odour1ThirdquarternormF0 = (Odour1Thirdquarter - meanFZero1)./meanFZero1;
Odour1FourthquarternormF0 = (Odour1Fourthquarter - meanFZero1)./meanFZero1;
% Odour 2
Odour2FirstquarternormF0 = (Odour2Firstquarter - meanFZero2)./meanFZero2;
Odour2SecondquarternormF0 = (Odour2Secondquarter - meanFZero2)./meanFZero2;
Odour2ThirdquarternormF0 = (Odour2Thirdquarter - meanFZero2)./meanFZero2;
Odour2FourthquarternormF0 = (Odour2Fourthquarter - meanFZero2)./meanFZero2;
% Odour 3
Odour3FirstquarternormF0 = (Odour3Firstquarter - meanFZero3)./meanFZero3;
Odour3SecondquarternormF0 = (Odour3Secondquarter - meanFZero3)./meanFZero3;
Odour3ThirdquarternormF0 = (Odour3Thirdquarter - meanFZero3)./meanFZero3;
Odour3FourthquarternormF0 = (Odour3Fourthquarter - meanFZero3)./meanFZero3;

% calculate mean for each odour
% Odour 1
meanstatOdour1Firstquarter = mean(Odour1FirstquarternormF0);
meanstatOdour1Secondquarter = mean(Odour1SecondquarternormF0);
meanstatOdour1Thirdquarter = mean(Odour1ThirdquarternormF0);
meanstatOdour1Fourthquarter = mean(Odour1FourthquarternormF0);
% Odour 2
meanstatOdour2Firstquarter = mean(Odour2FirstquarternormF0);
meanstatOdour2Secondquarter = mean(Odour2SecondquarternormF0);
meanstatOdour2Thirdquarter = mean(Odour2ThirdquarternormF0);
meanstatOdour2Fourthquarter = mean(Odour2FourthquarternormF0);
% Odour 3
meanstatOdour3Firstquarter = mean(Odour3FirstquarternormF0);
meanstatOdour3Secondquarter = mean(Odour3SecondquarternormF0);
meanstatOdour3Thirdquarter = mean(Odour3ThirdquarternormF0);
meanstatOdour3Fourthquarter = mean(Odour3FourthquarternormF0);

% mean peak DF/F0 for the whole Odour 1, 2 and 3
% Odour 1
peakstatOdour1Firstquarter = max(Odour1FirstquarternormF0);
peakstatOdour1Secondquarter = max(Odour1SecondquarternormF0);
peakstatOdour1Thirdquarter = max(Odour1ThirdquarternormF0);
peakstatOdour1Fourthquarter = max(Odour1FourthquarternormF0);
% Odour 2
peakstatOdour2Firstquarter = max(Odour2FirstquarternormF0);
peakstatOdour2Secondquarter = max(Odour2SecondquarternormF0);
peakstatOdour2Thirdquarter = max(Odour2ThirdquarternormF0);
peakstatOdour2Fourthquarter = max(Odour2FourthquarternormF0);
% Odour 3
peakstatOdour3Firstquarter = max(Odour3FirstquarternormF0);
peakstatOdour3Secondquarter = max(Odour3SecondquarternormF0);
peakstatOdour3Thirdquarter = max(Odour3ThirdquarternormF0);
peakstatOdour3Fourthquarter = max(Odour3FourthquarternormF0);

% extract mean integral DF/F0 for the whole Odour 1, 2 and 3
% Odour 1
intstatOdour1Firstquarter = sum(Odour1FirstquarternormF0);
intstatOdour1Secondquarter = sum(Odour1SecondquarternormF0);
intstatOdour1Thirdquarter = sum(Odour1ThirdquarternormF0);
intstatOdour1Fourthquarter = sum(Odour1FourthquarternormF0);
% Odour 2
intstatOdour2Firstquarter = sum(Odour2FirstquarternormF0);
intstatOdour2Secondquarter = sum(Odour2SecondquarternormF0);
intstatOdour2Thirdquarter = sum(Odour2ThirdquarternormF0);
intstatOdour2Fourthquarter = sum(Odour2FourthquarternormF0);
% Odour 3
intstatOdour3Firstquarter = sum(Odour3FirstquarternormF0);
intstatOdour3Secondquarter = sum(Odour3SecondquarternormF0);
intstatOdour3Thirdquarter = sum(Odour3ThirdquarternormF0);
intstatOdour3Fourthquarter = sum(Odour3FourthquarternormF0);



                    % Whole 1 min of training 
                     %for each odour presentation
                           
% creating a matrix for the whole 1 min odour presentation for each odour
Odour1 = M(framesOdour1,2:end);
Odour2 = M(framesOdour2,2:end);
Odour3 = M(framesOdour3,2:end);
% Normalizing frames to F0 for Odour 1, 2 and 3
Odour1normF0 = (Odour1 - meanFZero1)./meanFZero1;
Odour2normF0 = (Odour2 - meanFZero2)./meanFZero2;
Odour3normF0 = (Odour3 - meanFZero3)./meanFZero3;
% calculate mean for Odour 1, 2 and 3
meanstatOdour1 = mean(Odour1normF0);
meanstatOdour2 = mean(Odour2normF0);
meanstatOdour3 = mean(Odour3normF0);
% mean peak DF/F0 for the whole Odour 1, 2 and 3
peakstatOdour1 = max(Odour1normF0);
peakstatOdour2 = max(Odour2normF0);
peakstatOdour3 = max(Odour3normF0); 
% extract mean integral DF/F0 for the whole Odour 1, 2 and 3
intstatOdour1 = sum(Odour1normF0);
intstatOdour2 = sum(Odour2normF0);
intstatOdour3 = sum(Odour3normF0);


      % OFF response of each odour presentation
                           
% creating a matrix for the whole training + OFF response for each odour
Odour1OFF = M(framesOdour1OFF,2:end);
Odour2OFF = M(framesOdour2OFF,2:end);
Odour3OFF = M(framesOdour3OFF,2:end);
 % Normalizing frames to F0 for Odour 1, 2 and 3
Odour1OFFnormF0 = (Odour1OFF - meanFZero1)./meanFZero1;
Odour2OFFnormF0 = (Odour2OFF - meanFZero2)./meanFZero2;
Odour3OFFnormF0 = (Odour3OFF - meanFZero3)./meanFZero3;
% calculate mean for Odour 1, 2 and 3
meanstatOdour1OFF = mean(Odour1OFFnormF0);
meanstatOdour2OFF = mean(Odour2OFFnormF0);
meanstatOdour3OFF = mean(Odour3OFFnormF0);
% mean peak DF/F0 for the whole Odour 1, 2 and 3
peakstatOdour1OFF = max(Odour1OFFnormF0);
peakstatOdour2OFF = max(Odour2OFFnormF0);
peakstatOdour3OFF = max(Odour3OFFnormF0);
 % extract mean integral DF/F0 for the whole Odour 1, 2 and 3
intstatOdour1OFF = sum(Odour1OFFnormF0);
intstatOdour2OFF = sum(Odour2OFFnormF0);
intstatOdour3OFF = sum(Odour3OFFnormF0);

% Whole 1 min of each odour presentation + OFF response
                        
% creating a matrix for odor presentation for Odour 1, 2 and 3
Odour1plusOFF = M(framesOdour1plusOFF,2:end);
Odour2plusOFF = M(framesOdour2plusOFF,2:end);
Odour3plusOFF = M(framesOdour3plusOFF,2:end);
% Normalizing frames to F0 for Odour 1, 2 and 3
Odour1plusOFFnormF0 = (Odour1plusOFF - meanFZero1)./meanFZero1;
Odour2plusOFFnormF0 = (Odour2plusOFF - meanFZero2)./meanFZero2;
Odour3plusOFFnormF0 = (Odour3plusOFF - meanFZero3)./meanFZero3;
% calcul the mean After Odour presentation for Odour 1, 2 and 3
meanstatOdour1plusOFF = mean(Odour1plusOFFnormF0);
meanstatOdour2plusOFF = mean(Odour2plusOFFnormF0);
meanstatOdour3plusOFF = mean(Odour3plusOFFnormF0);
% mean peak DF/F0 for the whole Odour 1, 2 and 3
peakstatOdour1plusOFF = max(Odour1plusOFFnormF0);
peakstatOdour2plusOFF = max(Odour2plusOFFnormF0);
peakstatOdour3plusOFF = max(Odour3plusOFFnormF0);
% extract mean integral DF/F0 for the whole Odour 1, 2 and 3
intstatOdour1plusOFF = sum(Odour1plusOFFnormF0);
intstatOdour2plusOFF = sum(Odour2plusOFFnormF0);
intstatOdour3plusOFF = sum(Odour3plusOFFnormF0);


%%% trials of training (odour + shock) %%%

% creating a matrix for odor presentation for Odour 1, 2 and 3


Trial1Odour3 = M(framesTrial1Odour3,2:end);
Trial2Odour3 = M(framesTrial2Odour3,2:end);
Trial3Odour3 = M(framesTrial3Odour3,2:end);
Trial4Odour3 = M(framesTrial4Odour3,2:end);
Trial5Odour3 = M(framesTrial5Odour3,2:end);
Trial6Odour3 = M(framesTrial6Odour3,2:end);
Trial23Odour3 = M(framesTrial23Odour3,2:end);
Shock1Trial23Odour3  = M(framesshock1Trial23Odour3,2:end);

% Normalizing frames to F0 for Odour 1, 2 and 3


Trial1Odour3normF0 = (Trial1Odour3 - meanFZero1)./meanFZero1;
Trial2Odour3normF0 = (Trial2Odour3 - meanFZero1)./meanFZero1;
Trial3Odour3normF0 = (Trial3Odour3 - meanFZero1)./meanFZero1;
Trial4Odour3normF0 = (Trial4Odour3 - meanFZero1)./meanFZero1;
Trial5Odour3normF0 = (Trial5Odour3 - meanFZero1)./meanFZero1;
Trial6Odour3normF0 = (Trial6Odour3 - meanFZero1)./meanFZero1;

Trial23Odour3normF0 = (Trial23Odour3 - meanFZero3)./meanFZero3;
Trial23shock1Odour3normF0 = (Shock1Trial23Odour3 - meanFZero3)./meanFZero3;

% extract integral DF/F0 for the whole Odour 1, 2 and 3


intstatTrial1Odour3 = sum(Trial1Odour3normF0);
intstatTrial2Odour3 = sum(Trial2Odour3normF0);
intstatTrial3Odour3 = sum(Trial3Odour3normF0);
intstatTrial4Odour3 = sum(Trial4Odour3normF0);
intstatTrial5Odour3 = sum(Trial5Odour3normF0);
intstatTrial6Odour3 = sum(Trial6Odour3normF0);

intstatTrial23Odour3 = sum(Trial23Odour3normF0);
intstatTrial23shock1Odour3 = sum(Trial23shock1Odour3normF0);



%%%%for trial =1:6
%%%%['instat' num2str(trial) '= sum(Trial' num2str(trial) ')']
%%%%end


           % Odour subtraction
  
           % Odour3 - Odour2        
Odour3SubOdour2 = (Odour3normF0 - Odour2normF0);
meanstatOdour3SubOdour2 = mean(Odour3SubOdour2);
intstatOdour3SubOdour2 = sum(Odour3SubOdour2);
peakstatOdour3SubOdour2 = max(Odour3SubOdour2);

Odour3SubOdour2Alone1 = (Odour3Alone1normF0 - Odour2Alone1normF0);
intstatOdour3SubOdour2Alone1 = sum(Odour3SubOdour2Alone1);
meanstatOdour3SubOdour2Alone1 = mean(Odour3SubOdour2Alone1);
peakstatOdour3SubOdour2Alone1 = max(Odour3SubOdour2Alone1);

Odour3SubOdour2Firstshock = (Odour3FirstshocknormF0 - Odour2FirstshocknormF0);
intstatOdour3SubOdour2Firstshock = sum(Odour3SubOdour2Firstshock);
meanstatOdour3SubOdour2Firstshock = mean(Odour3SubOdour2Firstshock);
peakstatOdour3SubOdour2Firstshock = max(Odour3SubOdour2Firstshock);

Odour3SubOdour2Alone2 = (Odour3Alone2normF0 - Odour2Alone2normF0);
intstatOdour3SubOdour2Alone2 = sum(Odour3SubOdour2Alone2);
meanstatOdour3SubOdour2Alone2 = mean(Odour3SubOdour2Alone2);
peakstatOdour3SubOdour2Alone2 = max(Odour3SubOdour2Alone2);

Odour3SubOdour2Secondshock = (Odour3SecondshocknormF0 - Odour2SecondshocknormF0);
intstatOdour3SubOdour2Secondshock = sum(Odour3SubOdour2Secondshock);
meanstatOdour3SubOdour2Secondshock = mean(Odour3SubOdour2Secondshock);
peakstatOdour3SubOdour2Secondshock = max(Odour3SubOdour2Secondshock);

Odour3SubOdour2Alone3 = (Odour3Alone3normF0 - Odour2Alone3normF0);
intstatOdour3SubOdour2Alone3 = sum(Odour3SubOdour2Alone3);
meanstatOdour3SubOdour2Alone3 = mean(Odour3SubOdour2Alone3);
peakstatOdour3SubOdour2Alone3 = max(Odour3SubOdour2Alone3);

Odour3SubOdour2Thirdshock = (Odour3ThirdshocknormF0 - Odour2ThirdshocknormF0);
intstatOdour3SubOdour2Thirdshock = sum(Odour3SubOdour2Thirdshock);
meanstatOdour3SubOdour2Thirdshock = mean(Odour3SubOdour2Thirdshock);
peakstatOdour3SubOdour2Thirdshock = max(Odour3SubOdour2Thirdshock);

Odour3SubOdour2Alone4 = (Odour3Alone4normF0 - Odour2Alone4normF0);
intstatOdour3SubOdour2Alone4 = sum(Odour3SubOdour2Alone4);
meanstatOdour3SubOdour2Alone4 = mean(Odour3SubOdour2Alone4);
peakstatOdour3SubOdour2Alone4 = max(Odour3SubOdour2Alone4);

Odour3SubOdour2Fourthshock = (Odour3FourthshocknormF0 - Odour2FourthshocknormF0);
intstatOdour3SubOdour2Fourthshock = sum(Odour3SubOdour2Fourthshock);
meanstatOdour3SubOdour2Fourthshock = mean(Odour3SubOdour2Fourthshock);
peakstatOdour3SubOdour2Frouthshock = max(Odour3SubOdour2Fourthshock);

Odour3SubOdour2Firstpart = (Odour3FirstpartnormF0 - Odour2FirstpartnormF0);
meanstatOdour3SubOdour2First = mean(Odour3SubOdour2Firstpart);
intstatOdour3SubOdour2First = sum(Odour3SubOdour2Firstpart);
peakstatOdour3SubOdour2First = max(Odour3SubOdour2Firstpart);

Odour3SubOdour2Secondpart = (Odour3SecondpartnormF0 - Odour2SecondpartnormF0);
intstatOdour3SubOdour2Secondpart = sum(Odour3SubOdour2Secondpart);
meanstatOdour3SubOdour2Secondpart = mean(Odour3SubOdour2Secondpart);
peakstatOdour3SubOdour2Secondpart = max(Odour3SubOdour2Secondpart);

Odour3SubOdour2OFF = (Odour3OFFnormF0 - Odour2OFFnormF0);
intstatOdour3SubOdour2OFF = sum(Odour3SubOdour2OFF);
meanstatOdour3SubOdour2OFF = mean(Odour3SubOdour2OFF);
peakstatOdour3SubOdour2OFF = max(Odour3SubOdour2OFF);

Odour3SubOdour2Firstquarter = (Odour3FirstquarternormF0 - Odour2FirstquarternormF0);
intstatOdour3SubOdour2Firstquarter = sum(Odour3SubOdour2Firstquarter);
meanstatOdour3SubOdour2Firstquarter = mean(Odour3SubOdour2Firstquarter);
peakstatOdour3SubOdour2Firstquarter = max(Odour3SubOdour2Firstquarter);

Odour3SubOdour2Secondquarter = (Odour3SecondquarternormF0 - Odour2SecondquarternormF0);
intstatOdour3SubOdour2Secondquarter = sum(Odour3SubOdour2Secondquarter);
meanstatOdour3SubOdour2Secondquarter = mean(Odour3SubOdour2Secondquarter);
peakstatOdour3SubOdour2Secondquarter = max(Odour3SubOdour2Secondquarter);

Odour3SubOdour2Thirdquarter = (Odour3ThirdquarternormF0 - Odour2ThirdquarternormF0);
intstatOdour3SubOdour2Thirdquarter = sum(Odour3SubOdour2Thirdquarter);
meanstatOdour3SubOdour2Thirdquarter = mean(Odour3SubOdour2Thirdquarter);
peakstatOdour3SubOdour2Thirdquarter = max(Odour3SubOdour2Thirdquarter);

Odour3SubOdour2Fourthquarter = (Odour3FourthquarternormF0 - Odour2FourthquarternormF0);
intstatOdour3SubOdour2Fourthquarter = sum(Odour3SubOdour2Fourthquarter);
meanstatOdour3SubOdour2Fourthquarter = mean(Odour3SubOdour2Fourthquarter);
peakstatOdour3SubOdour2Fourthquarter = max(Odour3SubOdour2Fourthquarter);

            % Odour2 - Odour1 
Odour2SubOdour1 = (Odour2normF0 - Odour1normF0);
meanstatOdour2SubOdour1 = (Odour2SubOdour1);
intstatOdour2SubOdour1 = sum (Odour2SubOdour1);
peakstatOdour2SubOdour1 = max(Odour2SubOdour1);

Odour2SubOdour1Alone1 = (Odour2Alone1normF0 - Odour1Alone1normF0);
intstatOdour2SubOdour1Alone1 = sum(Odour2SubOdour1Alone1);
meanstatOdour2SubOdour1Alone1 = mean(Odour2SubOdour1Alone1);
peakstatOdour2SubOdour1Alone1 = max(Odour2SubOdour1Alone1);

Odour2SubOdour1Firstshock = (Odour2FirstshocknormF0 - Odour1FirstshocknormF0);
intstatOdour2SubOdour1Firstshock = sum(Odour2SubOdour1Firstshock);
meanstatOdour2SubOdour1Firstshock = mean(Odour2SubOdour1Firstshock);
peakstatOdour2SubOdour1Firstshock = max(Odour2SubOdour1Firstshock);

Odour2SubOdour1Alone2 = (Odour2Alone2normF0 - Odour1Alone2normF0);
intstatOdour2SubOdour1Alone2 = sum(Odour2SubOdour1Alone2);
meanstatOdour2SubOdour1Alone2 = mean(Odour2SubOdour1Alone2);
peakstatOdour2SubOdour1Alone2 = max(Odour2SubOdour1Alone2);

Odour2SubOdour1Secondshock = (Odour2SecondshocknormF0 - Odour1SecondshocknormF0);
intstatOdour2SubOdour1Secondshock = sum(Odour2SubOdour1Secondshock);
meanstatOdour2SubOdour1Secondshock = mean(Odour2SubOdour1Secondshock);
peakstatOdour2SubOdour1Secondshock = max(Odour2SubOdour1Secondshock);

Odour2SubOdour1Alone3 = (Odour2Alone3normF0 - Odour1Alone3normF0);
intstatOdour2SubOdour1Alone3 = sum(Odour2SubOdour1Alone3);
meanstatOdour2SubOdour1Alone3 = mean(Odour2SubOdour1Alone3);
peakstatOdour2SubOdour1Alone3 = max(Odour2SubOdour1Alone3);

Odour2SubOdour1Thirdshock = (Odour2ThirdshocknormF0 - Odour1ThirdshocknormF0);
intstatOdour2SubOdour1Thirdshock = sum(Odour2SubOdour1Thirdshock);
meanstatOdour2SubOdour1Thirdshock = mean(Odour2SubOdour1Thirdshock);
peakstatOdour2SubOdour1Thirdshock = max(Odour2SubOdour1Thirdshock);

Odour2SubOdour1Alone4 = (Odour2Alone4normF0 - Odour1Alone4normF0);
intstatOdour2SubOdour1Alone4 = sum(Odour2SubOdour1Alone4);
meanstatOdour2SubOdour1Alone4 = mean(Odour2SubOdour1Alone4);
peakstatOdour2SubOdour1Alone4 = max(Odour2SubOdour1Alone4);

Odour2SubOdour1Fourthshock = (Odour2FourthshocknormF0 - Odour1FourthshocknormF0);
intstatOdour2SubOdour1Fourthshock = sum(Odour2SubOdour1Fourthshock);
meanstatOdour2SubOdour1Fourthshock = mean(Odour2SubOdour1Fourthshock);
peakstatOdour2SubOdour1Fourthshock = max(Odour2SubOdour1Fourthshock);

Odour2SubOdour1Firstpart = (Odour2FirstpartnormF0 - Odour1FirstpartnormF0);
meanstatOdour2SubOdour1First = mean(Odour2SubOdour1Firstpart);
intstatOdour2SubOdour1First = sum(Odour2SubOdour1Firstpart);
peakstatOdour2SubOdour1First = max(Odour2SubOdour1Firstpart);

Odour2SubOdour1Secondpart = (Odour2SecondpartnormF0 - Odour1SecondpartnormF0);
meanstatOdour2SubOdour1Secondpart = mean(Odour2SubOdour1Secondpart);
intstatOdour2SubOdour1Secondpart = sum(Odour2SubOdour1Secondpart);
peakstatOdour2SubOdour1Secondpart = max(Odour2SubOdour1Secondpart);
       
Odour2SubOdour1OFF = (Odour2OFFnormF0 - Odour1OFFnormF0);
intstatOdour2SubOdour1OFF = sum(Odour2SubOdour1OFF);
meanstatOdour2SubOdour1OFF = mean(Odour2SubOdour1OFF);
peakstatOdour2SubOdour1OFF = max(Odour2SubOdour1OFF);

Odour2SubOdour1Firstquarter = (Odour2FirstquarternormF0 - Odour1FirstquarternormF0);
intstatOdour2SubOdour1Firstquarter = sum(Odour2SubOdour1Firstquarter);
meanstatOdour2SubOdour1Firstquarter = mean(Odour2SubOdour1Firstquarter);
peakstatOdour2SubOdour1Firstquarter = max(Odour2SubOdour1Firstquarter);

Odour2SubOdour1Secondquarter = (Odour2SecondquarternormF0 - Odour1SecondquarternormF0);
intstatOdour2SubOdour1Secondquarter = sum(Odour2SubOdour1Secondquarter);
meanstatOdour2SubOdour1Secondquarter = mean(Odour2SubOdour1Secondquarter);
peakstatOdour2SubOdour1Secondquarter = max(Odour2SubOdour1Secondquarter);

Odour2SubOdour1Thirdquarter = (Odour2ThirdquarternormF0 - Odour1ThirdquarternormF0);
intstatOdour2SubOdour1Thirdquarter = sum(Odour2SubOdour1Thirdquarter);
meanstatOdour2SubOdour1Thirdquarter = mean(Odour2SubOdour1Thirdquarter);
peakstatOdour2SubOdour1Thirdquarter = max(Odour2SubOdour1Thirdquarter);

Odour2SubOdour1Fourthquarter = (Odour2FourthquarternormF0 - Odour1FourthquarternormF0);
intstatOdour2SubOdour1Fourthquarter = sum(Odour2SubOdour1Fourthquarter);
meanstatOdour2SubOdour1Fourthquarter = mean(Odour2SubOdour1Fourthquarter);
peakstatOdour2SubOdour1Fourthquarter = max(Odour2SubOdour1Fourthquarter);




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%% MEAN TRACES and SEM for each odour presentation %%%%%%%%%%%
        
% create a new bigger matrix
Odour1Trace = M(159:630,2:end);
Odour2Trace = M(820:1291,2:end);
Odour3Trace = M(1481:1952,2:end);
% Normalizing frames to F0
Odour1TracenormF0 = (Odour1Trace - meanFZero1)./meanFZero1;
Odour2TracenormF0 = (Odour2Trace - meanFZero2)./meanFZero2;
Odour3TracenormF0 = (Odour3Trace - meanFZero3)./meanFZero3;
            
% trace the graph with the SEM and mean
traceOdour1mean = mean(Odour1TracenormF0,2);
traceOdour2mean = mean(Odour2TracenormF0,2);
traceOdour3mean = mean(Odour3TracenormF0,2);
traceOdour1meanSEM = std(Odour1TracenormF0,0,2)/sqrt(N);
traceOdour2meanSEM = std(Odour2TracenormF0,0,2)/sqrt(N);
traceOdour3meanSEM = std(Odour3TracenormF0,0,2)/sqrt(N);



%%%   Normalised Traces to odour 1  %%%%
traceOdour1normodour1 = Odour1Trace ./meanstatOdour1;
traceOdour2normodour1 = Odour2Trace ./meanstatOdour1;
traceOdour3normodour1 = Odour3Trace ./meanstatOdour1;
traceOdour1meannormodour1 = mean(traceOdour1normodour1,2);
traceOdour2meannormodour1 = mean(traceOdour2normodour1,2);
traceOdour3meannormodour1 = mean(traceOdour2normodour1,2);
traceOdour1normodour1meanSEM = std(traceOdour1normodour1,0,2)/sqrt(N);
traceOdour2normodour1meanSEM = std(traceOdour2normodour1,0,2)/sqrt(N);
traceOdour3normodour1meanSEM = std(traceOdour3normodour1,0,2)/sqrt(N);


        %Traces for each odour substraction

%New Matrices and Traces for Odour3 - Odour2 
Odour3minusOdour2 = (Odour3TracenormF0 - Odour2TracenormF0);
traceOdour3minusOdour2 = mean(Odour3minusOdour2,2);
traceOdour3minusOdour2SEM = std(Odour3minusOdour2,0,2)/sqrt(N);

%New Matrices and Traces for Odour2 - Odour1
Odour2minusOdour1 = (Odour2TracenormF0 - Odour1TracenormF0);
traceOdour2minusOdour1 = mean(Odour2minusOdour1,2);
traceOdour2minusOdour1SEM = std(Odour2minusOdour1,0,2)/sqrt(N);



           
  % Display chart line
 
hold on
plot(traceOdour1mean, '-m', 'linewidth',3)
plot(traceOdour2mean, '-g', 'linewidth',3)
plot(traceOdour3mean, '-r', 'linewidth',3)




